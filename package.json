{
  "name": "interview-prep",
  "version": "1.0.0",
  "description": "A comprehensive full-stack application for technical interview preparation",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm start",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "test:watch": "concurrently \"npm run test:frontend -- --watch\" \"npm run test:backend -- --watch\"",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npx eslint src/ --ext .js,.jsx,.ts,.tsx",
    "lint:backend": "cd backend && npx eslint src/ --ext .js,.ts",
    "lint:fix": "npm run lint:frontend -- --fix && npm run lint:backend -- --fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "type-check": "cd frontend && npx tsc --noEmit && cd ../backend && npx tsc --noEmit",
    "validate": "npm run lint && npm run format:check && npm run type-check && npm run test",
    "prepare": "husky install",
    "db:setup": "cd backend && npm run db:migrate && npm run db:seed",
    "db:migrate": "cd backend && npm run migrate",
    "db:seed": "cd backend && npm run seed"
  },
  "keywords": [
    "interview",
    "preparation",
    "coding",
    "full-stack",
    "react",
    "nodejs"
  ],
  "author": "Your Name",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.0",
    "eslint": "^8.45.0",
    "prettier": "^3.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ]
  }
}